<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Order extends \App\Entity\Order implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'reference', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'fullName', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'carrierName', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'carrierPrice', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'delivery', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'isPaid', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'moreInformations', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'createdAt', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'orderDetails', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'quantity', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'subTotalHT', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'taxe', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'subTotalTTC', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'StripeCheckoutSessionId'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'reference', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'fullName', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'carrierName', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'carrierPrice', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'delivery', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'isPaid', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'moreInformations', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'createdAt', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'orderDetails', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'quantity', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'subTotalHT', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'taxe', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'subTotalTTC', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'StripeCheckoutSessionId'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Order $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getReference(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReference', []);

        return parent::getReference();
    }

    /**
     * {@inheritDoc}
     */
    public function setReference(string $reference): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReference', [$reference]);

        return parent::setReference($reference);
    }

    /**
     * {@inheritDoc}
     */
    public function getFullName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFullName', []);

        return parent::getFullName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFullName(string $fullName): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFullName', [$fullName]);

        return parent::setFullName($fullName);
    }

    /**
     * {@inheritDoc}
     */
    public function getCarrierName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCarrierName', []);

        return parent::getCarrierName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCarrierName(string $carrierName): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCarrierName', [$carrierName]);

        return parent::setCarrierName($carrierName);
    }

    /**
     * {@inheritDoc}
     */
    public function getCarrierPrice(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCarrierPrice', []);

        return parent::getCarrierPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setCarrierPrice(float $carrierPrice): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCarrierPrice', [$carrierPrice]);

        return parent::setCarrierPrice($carrierPrice);
    }

    /**
     * {@inheritDoc}
     */
    public function getDelivery(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDelivery', []);

        return parent::getDelivery();
    }

    /**
     * {@inheritDoc}
     */
    public function setDelivery(string $delivery): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDelivery', [$delivery]);

        return parent::setDelivery($delivery);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsPaid(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsPaid', []);

        return parent::getIsPaid();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsPaid(bool $isPaid): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsPaid', [$isPaid]);

        return parent::setIsPaid($isPaid);
    }

    /**
     * {@inheritDoc}
     */
    public function getMoreInformations(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMoreInformations', []);

        return parent::getMoreInformations();
    }

    /**
     * {@inheritDoc}
     */
    public function setMoreInformations(?string $moreInformations): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMoreInformations', [$moreInformations]);

        return parent::setMoreInformations($moreInformations);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTimeInterface $createdAt): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderDetails(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderDetails', []);

        return parent::getOrderDetails();
    }

    /**
     * {@inheritDoc}
     */
    public function addOrderDetail(\App\Entity\OrderDetails $orderDetail): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOrderDetail', [$orderDetail]);

        return parent::addOrderDetail($orderDetail);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOrderDetail(\App\Entity\OrderDetails $orderDetail): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOrderDetail', [$orderDetail]);

        return parent::removeOrderDetail($orderDetail);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(?\App\Entity\User $user): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuantity(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuantity', []);

        return parent::getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuantity(int $quantity): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuantity', [$quantity]);

        return parent::setQuantity($quantity);
    }

    /**
     * {@inheritDoc}
     */
    public function getsubTotalHT(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getsubTotalHT', []);

        return parent::getsubTotalHT();
    }

    /**
     * {@inheritDoc}
     */
    public function setsubTotalHT(float $subTotalHT): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setsubTotalHT', [$subTotalHT]);

        return parent::setsubTotalHT($subTotalHT);
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxe(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxe', []);

        return parent::getTaxe();
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxe(float $taxe): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxe', [$taxe]);

        return parent::setTaxe($taxe);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubTotalTTC(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubTotalTTC', []);

        return parent::getSubTotalTTC();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubTotalTTC(float $subTotalTTC): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubTotalTTC', [$subTotalTTC]);

        return parent::setSubTotalTTC($subTotalTTC);
    }

    /**
     * {@inheritDoc}
     */
    public function getStripeCheckoutSessionId(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStripeCheckoutSessionId', []);

        return parent::getStripeCheckoutSessionId();
    }

    /**
     * {@inheritDoc}
     */
    public function setStripeCheckoutSessionId(?string $StripeCheckoutSessionId): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStripeCheckoutSessionId', [$StripeCheckoutSessionId]);

        return parent::setStripeCheckoutSessionId($StripeCheckoutSessionId);
    }

}
